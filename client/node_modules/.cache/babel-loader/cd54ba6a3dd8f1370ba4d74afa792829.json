{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0422\\u0435\\u043C\\u0438\\u0440\\u043B\\u0430\\u043D\\\\Desktop\\\\tests\\\\client\\\\src\\\\components\\\\ParssTetsCard\\\\PassTestCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport TestCard from \"../TestCard/TestCard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PassTestCard = () => {\n  _s();\n\n  const [test, setTest] = useState([]);\n  const [questions, setQuestions] = useState([]);\n\n  const chooseAnswer = (e, quest) => {\n    const filtered = questions.filter(it => it.id !== quest.id);\n    const questAns = {\n      id: quest.id,\n      userAnswer: e.target.value\n    };\n    setQuestions([...filtered, questAns]);\n  };\n\n  useEffect(() => {\n    axios(\"/api/tests/get-test/js\").then(_ref => {\n      let {\n        data\n      } = _ref;\n      setTest(data);\n    });\n  }, []);\n\n  const finishTest = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: test === null || test === void 0 ? void 0 : test.map(quest => {\n        var _quest$answers;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: quest === null || quest === void 0 ? void 0 : quest.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 41\n          }, this), quest === null || quest === void 0 ? void 0 : (_quest$answers = quest.answers) === null || _quest$answers === void 0 ? void 0 : _quest$answers.map(ans => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-2\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => chooseAnswer(e, quest),\n                  className: \"radio-inp\",\n                  type: \"radio\",\n                  name: quest === null || quest === void 0 ? void 0 : quest.question,\n                  value: ans\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 57\n                }, this), ans]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 49\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-secondary btn\",\n      onClick: finishTest,\n      children: \"finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PassTestCard, \"o1cEKTwd/1Yq19g9gOuvM1DdzDI=\");\n\n_c = PassTestCard;\nexport default PassTestCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PassTestCard\");","map":{"version":3,"sources":["C:/Users/Темирлан/Desktop/tests/client/src/components/ParssTetsCard/PassTestCard.js"],"names":["React","useEffect","useState","axios","TestCard","PassTestCard","test","setTest","questions","setQuestions","chooseAnswer","e","quest","filtered","filter","it","id","questAns","userAnswer","target","value","then","data","finishTest","map","question","answers","ans"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMQ,YAAY,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAa;AAC9B,UAAMC,QAAQ,GAAGL,SAAS,CAACM,MAAV,CAAiBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,KAAK,CAACI,EAAvC,CAAjB;AACA,UAAMC,QAAQ,GAAG;AACbD,MAAAA,EAAE,EAAEJ,KAAK,CAACI,EADG;AAEbE,MAAAA,UAAU,EAAEP,CAAC,CAACQ,MAAF,CAASC;AAFR,KAAjB;AAIAX,IAAAA,YAAY,CAAC,CAAC,GAAGI,QAAJ,EAAcI,QAAd,CAAD,CAAZ;AACH,GAPD;;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAC,wBAAD,CAAL,CAAgCkB,IAAhC,CAAqC,QAAY;AAAA,UAAX;AAACC,QAAAA;AAAD,OAAW;AAC7Cf,MAAAA,OAAO,CAACe,IAAD,CAAP;AACH,KAFD;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEQjB,IAFR,aAEQA,IAFR,uBAEQA,IAAI,CAAEkB,GAAN,CAAUZ,KAAK,IAAI;AAAA;;AACf,4BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACY;AAAA,sBAAIA,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEa;AAAX;AAAA;AAAA;AAAA;AAAA,kBADZ,EAEab,KAFb,aAEaA,KAFb,yCAEaA,KAAK,CAAEc,OAFpB,mDAEa,eAAgBF,GAAhB,CAAoBG,GAAG,IAAI;AACxB,gCACI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACI;AAAA,wCACI;AAAO,kBAAA,QAAQ,EAAEhB,CAAC,IAAID,YAAY,CAACC,CAAD,EAAIC,KAAJ,CAAlC;AAA8C,kBAAA,SAAS,EAAC,WAAxD;AAAoE,kBAAA,IAAI,EAAC,OAAzE;AACO,kBAAA,IAAI,EAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEa,QADpB;AAC8B,kBAAA,KAAK,EAAEE;AADrC;AAAA;AAAA;AAAA;AAAA,wBADJ,EAIKA,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ;AASH,WAVA,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAiBH,OAlBD;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAwBI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAEJ,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CArDD;;GAAMlB,Y;;KAAAA,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport TestCard from \"../TestCard/TestCard.js\";\r\n\r\n\r\nconst PassTestCard = () => {\r\n    const [test, setTest] = useState([])\r\n\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    const chooseAnswer = (e, quest) =>{\r\n        const filtered = questions.filter(it => it.id !== quest.id)\r\n        const questAns = {\r\n            id: quest.id,\r\n            userAnswer: e.target.value\r\n        }\r\n        setQuestions([...filtered, questAns])\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios(\"/api/tests/get-test/js\").then(({data}) => {\r\n            setTest(data)\r\n        })\r\n    },[])\r\n\r\n    const finishTest = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {\r\n                    test?.map(quest => {\r\n                        return (\r\n                            <div className=\"col-6\">\r\n                                        <p>{quest?.question}</p>\r\n                                        {quest?.answers?.map(ans => {\r\n                                            return (\r\n                                                <div className=\"m-2\">\r\n                                                    <label>\r\n                                                        <input onChange={e => chooseAnswer(e, quest)} className=\"radio-inp\" type=\"radio\"\r\n                                                               name={quest?.question} value={ans} />\r\n\r\n                                                        {ans}</label>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n\r\n                            </div>\r\n                        )\r\n                    } )\r\n                }\r\n            </div>\r\n            <button className=\"btn-secondary btn\" onClick={finishTest}>finish</button>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default PassTestCard;"]},"metadata":{},"sourceType":"module"}