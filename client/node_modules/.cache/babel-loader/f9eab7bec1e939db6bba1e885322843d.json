{"ast":null,"code":"import _toConsumableArray from\"C:/Users/\\u0422\\u0435\\u043C\\u0438\\u0440\\u043B\\u0430\\u043D/Desktop/tests/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/\\u0422\\u0435\\u043C\\u0438\\u0440\\u043B\\u0430\\u043D/Desktop/tests/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import axios from\"axios\";import TestCard from\"../../components/TestCard/TestCard.js\";import{useParams}from\"react-router-dom\";import ResCard from\"../resCard/ResCard.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PassTestCard=function PassTestCard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),test=_useState2[0],setTest=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),result=_useState4[0],setResult=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),questions=_useState6[0],setQuestions=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),show=_useState8[0],setShow=_useState8[1];var _useParams=useParams(),name=_useParams.name;useEffect(function(){axios(\"/api/tests/get-test/\".concat(name)).then(function(_ref){var data=_ref.data;setTest(data);console.log(data[0]);});},[]);var chooseAnswer=function chooseAnswer(e,quest){var filtered=questions.filter(function(it){return it._id!==quest._id;});var questAns={_id:quest._id,userAnswer:e.target.value};setQuestions([].concat(_toConsumableArray(filtered),[questAns]));};var finishTest=function finishTest(){if(test[0].questions.length===questions.length){axios.post(\"/api/tests/check-test/\".concat(name),questions).then(function(_ref2){var data=_ref2.data;setResult(data);setShow(!show);});}else{alert(\"Check all questions\");}};return/*#__PURE__*/_jsx(_Fragment,{children:!show?/*#__PURE__*/_jsx(\"section\",{className:\"bg-brown\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:test.map(function(it){var _it$questions;return(_it$questions=it.questions)===null||_it$questions===void 0?void 0:_it$questions.map(function(quest){return/*#__PURE__*/_jsx(TestCard,{test:quest,chooseAnswer:chooseAnswer},quest._id);});})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary btn\",onClick:finishTest,children:\"Finish\"})]})}):/*#__PURE__*/_jsx(ResCard,{questions:questions,result:result})});};export default PassTestCard;","map":{"version":3,"sources":["C:/Users/Темирлан/Desktop/tests/client/src/pages/ParssTetsCard/PassTestCard.js"],"names":["React","useEffect","useState","axios","TestCard","useParams","ResCard","PassTestCard","test","setTest","result","setResult","questions","setQuestions","show","setShow","name","then","data","console","log","chooseAnswer","e","quest","filtered","filter","it","_id","questAns","userAnswer","target","value","finishTest","length","post","alert","map"],"mappings":"gVAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uCAArB,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,C,6IAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,cAAwBL,QAAQ,CAAC,EAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eACA,eAA4BP,QAAQ,CAAC,EAAD,CAApC,yCAAOQ,MAAP,eAAeC,SAAf,eACA,eAAkCT,QAAQ,CAAC,EAAD,CAA1C,yCAAOU,SAAP,eAAkBC,YAAlB,eACA,eAAwBX,QAAQ,CAAC,KAAD,CAAhC,yCAAOY,IAAP,eAAaC,OAAb,eACA,eAAeV,SAAS,EAAxB,CAAOW,IAAP,YAAOA,IAAP,CAEAf,SAAS,CAAC,UAAM,CACZE,KAAK,+BAAwBa,IAAxB,EAAL,CAAqCC,IAArC,CAA0C,cAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,CAClDT,OAAO,CAACS,IAAD,CAAP,CACAC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB,EACH,CAHD,EAIH,CALQ,CAKP,EALO,CAAT,CASA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAIC,KAAJ,CAAa,CAC9B,GAAMC,CAAAA,QAAQ,CAAGZ,SAAS,CAACa,MAAV,CAAiB,SAAAC,EAAE,QAAIA,CAAAA,EAAE,CAACC,GAAH,GAAWJ,KAAK,CAACI,GAArB,EAAnB,CAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAG,CACbD,GAAG,CAAEJ,KAAK,CAACI,GADE,CAEbE,UAAU,CAAEP,CAAC,CAACQ,MAAF,CAASC,KAFR,CAAjB,CAIAlB,YAAY,8BAAKW,QAAL,GAAeI,QAAf,GAAZ,CACH,CAPD,CAWA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAGxB,IAAI,CAAC,CAAD,CAAJ,CAAQI,SAAR,CAAkBqB,MAAlB,GAA6BrB,SAAS,CAACqB,MAA1C,CAAkD,CAC9C9B,KAAK,CAAC+B,IAAN,iCAAoClB,IAApC,EAA4CJ,SAA5C,EACKK,IADL,CACU,eAAY,IAAVC,CAAAA,IAAU,OAAVA,IAAU,CACdP,SAAS,CAACO,IAAD,CAAT,CACAH,OAAO,CAAC,CAACD,IAAF,CAAP,CACH,CAJL,EAMH,CAPD,IAQK,CACDqB,KAAK,CAAC,qBAAD,CAAL,CACH,CAEJ,CAbD,CAeA,mBACI,yBAEQ,CAACrB,IAAD,cAAQ,gBAAS,SAAS,CAAC,UAAnB,uBACJ,aAAK,SAAS,CAAC,WAAf,wBACI,YAAK,SAAS,CAAC,KAAf,UAEQN,IAAI,CAAC4B,GAAL,CAAS,SAAAV,EAAE,CAAI,mBACX,qBACIA,EAAE,CAACd,SADP,wCACI,cAAcwB,GAAd,CAAkB,SAAAb,KAAK,CAAI,CAC3B,mBACI,KAAC,QAAD,EAA0B,IAAI,CAAEA,KAAhC,CAAuC,YAAY,CAAEF,YAArD,EAAeE,KAAK,CAACI,GAArB,CADJ,CAIH,CALG,CADJ,CAQH,CATD,CAFR,EADJ,cAeI,eAAQ,SAAS,CAAC,mBAAlB,CAAsC,OAAO,CAAEK,UAA/C,oBAfJ,GADI,EAAR,cAkBa,KAAC,OAAD,EAAU,SAAS,CAAEpB,SAArB,CAAgC,MAAM,CAAEF,MAAxC,EApBrB,EADJ,CA4BH,CAtED,CAwEA,cAAeH,CAAAA,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport TestCard from \"../../components/TestCard/TestCard.js\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ResCard from \"../resCard/ResCard.js\";\r\n\r\n\r\nconst PassTestCard = () => {\r\n    const [test, setTest] = useState([])\r\n    const [result, setResult] = useState([])\r\n    const [questions, setQuestions] = useState([])\r\n    const [show, setShow] = useState(false)\r\n    const {name} = useParams()\r\n\r\n    useEffect(() => {\r\n        axios(`/api/tests/get-test/${name}`).then(({data}) => {\r\n            setTest(data)\r\n            console.log(data[0])\r\n        })\r\n    },[])\r\n\r\n\r\n\r\n    const chooseAnswer = (e, quest) =>{\r\n        const filtered = questions.filter(it => it._id !== quest._id)\r\n        const questAns = {\r\n            _id: quest._id,\r\n            userAnswer: e.target.value\r\n        }\r\n        setQuestions([...filtered, questAns])\r\n    }\r\n\r\n\r\n\r\n    const finishTest = () => {\r\n        if(test[0].questions.length === questions.length) {\r\n            axios.post(`/api/tests/check-test/${name}`, questions )\r\n                .then(({data}) => {\r\n                    setResult(data)\r\n                    setShow(!show)\r\n                })\r\n\r\n        }\r\n        else {\r\n            alert(\"Check all questions\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !show ? <section className=\"bg-brown\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                test.map(it => {\r\n                                    return (\r\n                                        it.questions?.map(quest => {\r\n                                        return (\r\n                                            <TestCard key={quest._id} test={quest} chooseAnswer={chooseAnswer}/>\r\n\r\n                                        )\r\n                                    } )\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <button className=\"btn-secondary btn\" onClick={finishTest}>Finish</button>\r\n                    </div>\r\n                </section> : <ResCard  questions={questions} result={result}/>\r\n            }\r\n        </>\r\n\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default PassTestCard;"]},"metadata":{},"sourceType":"module"}