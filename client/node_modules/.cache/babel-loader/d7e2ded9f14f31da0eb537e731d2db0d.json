{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0422\\u0435\\u043C\\u0438\\u0440\\u043B\\u0430\\u043D\\\\Desktop\\\\tests\\\\client\\\\src\\\\components\\\\ParssTetsCard\\\\PassTestCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport TestCard from \"../TestCard/TestCard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PassTestCard = () => {\n  _s();\n\n  const [test, setTest] = useState([]);\n  const [questions, setQuestions] = useState([]);\n\n  const chooseAnswer = (e, ans) => {\n    const filtered = questions.filter(it => it.id !== test.id);\n    const questAns = {\n      id: test.id,\n      userAnswer: e.target.value\n    };\n    setQuestions([...filtered, questAns]);\n  };\n\n  useEffect(() => {\n    axios(\"/api/tests/get-test/js\").then(_ref => {\n      let {\n        data\n      } = _ref;\n      setTest(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: test === null || test === void 0 ? void 0 : test.map(it => {\n        var _it$answers;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: it === null || it === void 0 ? void 0 : it.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 41\n              }, this), it === null || it === void 0 ? void 0 : (_it$answers = it.answers) === null || _it$answers === void 0 ? void 0 : _it$answers.map(ans => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"m-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onChange: e => chooseAnswer(e, ans),\n                      className: \"radio-inp\",\n                      type: \"radio\",\n                      name: it === null || it === void 0 ? void 0 : it.question,\n                      value: ans\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 57\n                    }, this), ans]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PassTestCard, \"o1cEKTwd/1Yq19g9gOuvM1DdzDI=\");\n\n_c = PassTestCard;\nexport default PassTestCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PassTestCard\");","map":{"version":3,"sources":["C:/Users/Темирлан/Desktop/tests/client/src/components/ParssTetsCard/PassTestCard.js"],"names":["React","useEffect","useState","axios","TestCard","PassTestCard","test","setTest","questions","setQuestions","chooseAnswer","e","ans","filtered","filter","it","id","questAns","userAnswer","target","value","then","data","map","question","answers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMQ,YAAY,GAAG,CAACC,CAAD,EAAIC,GAAJ,KAAW;AAC5B,UAAMC,QAAQ,GAAGL,SAAS,CAACM,MAAV,CAAiBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUV,IAAI,CAACU,EAAtC,CAAjB;AACA,UAAMC,QAAQ,GAAG;AACbD,MAAAA,EAAE,EAAEV,IAAI,CAACU,EADI;AAEbE,MAAAA,UAAU,EAAEP,CAAC,CAACQ,MAAF,CAASC;AAFR,KAAjB;AAIAX,IAAAA,YAAY,CAAC,CAAC,GAAGI,QAAJ,EAAcI,QAAd,CAAD,CAAZ;AACH,GAPD;;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAC,wBAAD,CAAL,CAAgCkB,IAAhC,CAAqC,QAAY;AAAA,UAAX;AAACC,QAAAA;AAAD,OAAW;AAC7Cf,MAAAA,OAAO,CAACe,IAAD,CAAP;AACH,KAFD;AAGH,GAJQ,EAIP,EAJO,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEQhB,IAFR,aAEQA,IAFR,uBAEQA,IAAI,CAAEiB,GAAN,CAAUR,EAAE,IAAI;AAAA;;AACZ,4BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,sCACI;AAAA,0BAAIA,EAAJ,aAAIA,EAAJ,uBAAIA,EAAE,CAAES;AAAR;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKT,EAFL,aAEKA,EAFL,sCAEKA,EAAE,CAAEU,OAFT,gDAEK,YAAaF,GAAb,CAAiBX,GAAG,IAAI;AACrB,oCACI;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,yCACI;AAAA,4CACI;AAAO,sBAAA,QAAQ,EAAED,CAAC,IAAID,YAAY,CAACC,CAAD,EAAIC,GAAJ,CAAlC;AAA4C,sBAAA,SAAS,EAAC,WAAtD;AAAkE,sBAAA,IAAI,EAAC,OAAvE;AACO,sBAAA,IAAI,EAAEG,EAAF,aAAEA,EAAF,uBAAEA,EAAE,CAAES,QADjB;AAC2B,sBAAA,KAAK,EAAEZ;AADlC;AAAA;AAAA;AAAA;AAAA,4BADJ,EAIKA,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ;AASH,eAVA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAoBH,OArBD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAnDD;;GAAMP,Y;;KAAAA,Y;AAqDN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport TestCard from \"../TestCard/TestCard.js\";\r\n\r\n\r\nconst PassTestCard = () => {\r\n    const [test, setTest] = useState([])\r\n\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    const chooseAnswer = (e, ans) =>{\r\n        const filtered = questions.filter(it => it.id !== test.id)\r\n        const questAns = {\r\n            id: test.id,\r\n            userAnswer: e.target.value\r\n        }\r\n        setQuestions([...filtered, questAns])\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios(\"/api/tests/get-test/js\").then(({data}) => {\r\n            setTest(data)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {\r\n                    test?.map(it => {\r\n                        return (\r\n                            <div className=\"col-6\">\r\n                                <form>\r\n                                    <div className=\"m-2\">\r\n                                        <p>{it?.question}</p>\r\n                                        {it?.answers?.map(ans => {\r\n                                            return (\r\n                                                <div className=\"m-2\">\r\n                                                    <label>\r\n                                                        <input onChange={e => chooseAnswer(e, ans)} className=\"radio-inp\" type=\"radio\"\r\n                                                               name={it?.question} value={ans} />\r\n\r\n                                                        {ans}</label>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        )\r\n                    } )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default PassTestCard;"]},"metadata":{},"sourceType":"module"}